<?xml version="1.0" encoding="UTF-8"?>
<storyContext>
  <metadata>
    <epicId>3</epicId>
    <epicTitle>UI Polish and Enhancement</epicTitle>
    <storyId>3.1</storyId>
    <storyTitle>Apply Dark Mode Styling from UI Mockup</storyTitle>
    <generatedDate>2025-10-03</generatedDate>
    <generatedBy>Dev Agent (Manual Formalization)</generatedBy>
  </metadata>

  <acceptanceCriteria>
    <criterion id="AC1">
      <description>All frontend components use zinc palette colors exclusively</description>
      <testStrategy>Run grep -r "bg-gray\|text-gray" frontend/src/components → 0 results; Verify all components use bg-zinc-950, bg-zinc-900, text-white, border-zinc-700</testStrategy>
      <source>ui-mockup.html color scheme, Phase 2</source>
    </criterion>
    <criterion id="AC2">
      <description>Production build completes without errors</description>
      <testStrategy>cd frontend &amp;&amp; npm run build → Exit code 0; npm run preview → Serves on localhost:4173</testStrategy>
      <source>Task 12, NFR002 performance</source>
    </criterion>
    <criterion id="AC3">
      <description>All Jest tests pass with updated className assertions</description>
      <testStrategy>cd frontend &amp;&amp; npm test → 100% pass rate; No failing tests due to className mismatches</testStrategy>
      <source>Review Finding: Test Suite Impact</source>
    </criterion>
    <criterion id="AC4">
      <description>Manual smoke test passes on all screen sizes</description>
      <testStrategy>Submit query "Show me employees in Engineering" → Results display with dark theme; Mobile (375px): No horizontal scroll, text readable, buttons tappable; Desktop (1920px): Proper spacing</testStrategy>
      <source>Task 11 responsive testing</source>
    </criterion>
    <criterion id="AC5">
      <description>WCAG AA accessibility compliance maintained</description>
      <testStrategy>Verify contrast ratios: zinc-950 + white ≥ 4.5:1 (target: 20.6:1); Screen reader announces all interactive elements</testStrategy>
      <source>Task 0.1, WCAG 2.1 requirements</source>
    </criterion>
  </acceptanceCriteria>

  <artifacts>
    <documentation>
      <doc path="ui-mockup.html" type="design-mockup">
        <purpose>Reference design for dark mode color scheme and component styling</purpose>
        <keyElements>
          <element>Zinc palette: zinc-950, zinc-900, zinc-800, zinc-700 backgrounds</element>
          <element>Text colors: white (primary), zinc-300/400 (secondary)</element>
          <element>Border style: border-2 with zinc-700/800</element>
          <element>RAGAS metrics card styling with progress bars</element>
        </keyElements>
      </doc>
      <doc path="docs/prd.md" type="requirements">
        <purpose>Product requirements including NFR002 performance target</purpose>
        <relevantSections>NFR002: System shall respond to queries within 5 seconds (styling adds 0ms overhead)</relevantSections>
      </doc>
      <doc path="docs/tech-spec-epic-2.md" type="technical-spec">
        <purpose>Epic 2 RAGAS component technical specifications</purpose>
        <relevantSections>RagasScoreDisplay component structure and styling requirements</relevantSections>
      </doc>
    </documentation>

    <code>
      <file path="frontend/src/App.jsx" operation="modify">
        <purpose>Main application layout and container styling</purpose>
        <changes>
          <change line="57">bg-gray-50 → bg-zinc-950</change>
          <change line="59">text-gray-900 → text-white</change>
          <change line="44-54">ErrorBoundary fallback: bg-gray-50 → bg-zinc-950, text-gray-600 → text-zinc-400, text-red-600 → text-red-400</change>
          <change line="71-83">SQL toggle: bg-gray-100 → bg-zinc-900, text-gray-700 → text-emerald-400, add font-mono</change>
        </changes>
        <relatedAC>AC1</relatedAC>
      </file>

      <file path="frontend/src/components/QueryInterface.jsx" operation="modify">
        <purpose>Query input component styling</purpose>
        <changes>
          <change>Add bg-zinc-900 border-2 border-zinc-700 to card container</change>
          <change line="40-46">Textarea: bg-zinc-950 border-2 border-zinc-700 text-white placeholder-zinc-500</change>
          <change line="56-59">Button: bg-blue-600 hover:bg-blue-700 border-2 border-blue-500</change>
          <change line="53">Character counter: text-gray-600 → text-zinc-500</change>
        </changes>
        <relatedAC>AC1</relatedAC>
      </file>

      <file path="frontend/src/components/ResultsTable.jsx" operation="modify">
        <purpose>Results table component styling</purpose>
        <changes>
          <change line="18">Table container: bg-white → bg-zinc-900 border-2 border-zinc-700</change>
          <change line="20">Header: bg-gray-100 → bg-black border-b-2 border-zinc-700</change>
          <change line="23-25">Header text → text-zinc-400</change>
          <change line="29">tbody: add divide-y-2 divide-zinc-800</change>
          <change line="31">Row hover: hover:bg-gray-50 → hover:bg-zinc-800/50</change>
          <change line="33-35">Cell text: text-zinc-300 (IDs), text-white (names), text-zinc-400 (other)</change>
        </changes>
        <relatedAC>AC1</relatedAC>
      </file>

      <file path="frontend/src/components/ErrorDisplay.jsx" operation="modify">
        <purpose>Error message component styling</purpose>
        <changes>
          <change line="8">Container: bg-red-50 border-red-300 → bg-zinc-900 border-2 border-red-500/30</change>
          <change line="8">Text: text-red-800 → text-red-400</change>
        </changes>
        <relatedAC>AC1</relatedAC>
      </file>

      <file path="frontend/src/components/LoadingSpinner.jsx" operation="modify">
        <purpose>Loading spinner component styling</purpose>
        <changes>
          <change line="5">Text: text-gray-600 → text-zinc-300</change>
          <change>Container: add bg-zinc-900 if element exists</change>
        </changes>
        <relatedAC>AC1</relatedAC>
      </file>

      <file path="frontend/src/components/RagasScoreDisplay.jsx" operation="modify">
        <purpose>RAGAS metrics display component styling</purpose>
        <changes>
          <change>Container: add bg-zinc-900 border-2 border-zinc-700</change>
          <change>Section header: add border-b-2 border-zinc-700</change>
          <change line="16-18">Metric cards: bg-green-100/yellow-100/red-100 → bg-zinc-950 border-2 border-zinc-800 p-6</change>
          <change>Score colors: Keep semantic (red/green/yellow) at 400 shade</change>
          <change>Label text → text-zinc-400</change>
        </changes>
        <relatedAC>AC1</relatedAC>
      </file>

      <file path="frontend/src/__tests__/ResultsTable.test.jsx" operation="modify">
        <purpose>Update test assertions for new dark theme classNames</purpose>
        <changes>
          <change line="112">expect(row).toHaveClass('hover:bg-gray-50') → expect(row).toHaveClass('hover:bg-zinc-800/50')</change>
          <change>Search for other hardcoded gray className assertions and update</change>
        </changes>
        <relatedAC>AC3</relatedAC>
      </file>

      <file path="frontend/src/__tests__/*.test.jsx" operation="modify">
        <purpose>Update any other test files with className assertions</purpose>
        <changes>
          <change>grep -r "toHaveClass.*gray" frontend/src/__tests__/ and update matches</change>
        </changes>
        <relatedAC>AC3</relatedAC>
      </file>
    </code>
  </artifacts>

  <interfaces>
    <external>
      <interface name="Tailwind CSS v3.4.1">
        <type>CSS Framework</type>
        <purpose>Utility classes for styling (zinc palette, border utilities)</purpose>
        <contract>Uses pre-defined Tailwind color scale and spacing utilities; no custom theme modifications required</contract>
      </interface>
      <interface name="React 18.3.1">
        <type>UI Framework</type>
        <purpose>Component rendering; className prop interface</purpose>
        <contract>All styling changes via className prop; no inline styles or CSS modules</contract>
      </interface>
    </external>
  </interfaces>

  <constraints>
    <technical>
      <constraint>
        <type>Performance</type>
        <description>Styling changes must not impact query response time (target &lt; 5 seconds)</description>
        <verification>Tailwind classes are compile-time; 0ms runtime overhead</verification>
      </constraint>
      <constraint>
        <type>Accessibility</type>
        <description>WCAG 2.1 AA compliance required (minimum 4.5:1 contrast ratio)</description>
        <verification>zinc-950 + white = 20.6:1 (verified); zinc-900 + zinc-300 = 9.1:1 (verified)</verification>
      </constraint>
      <constraint>
        <type>Browser Compatibility</type>
        <description>Support Chrome, Firefox, Safari (modern versions)</description>
        <verification>Tailwind CSS provides cross-browser compatibility; no custom CSS</verification>
      </constraint>
    </technical>

    <businessRules>
      <rule>
        <id>BR-1</id>
        <description>Pure styling changes only - no functionality modifications</description>
        <rationale>Minimize risk of introducing bugs; separate concerns</rationale>
      </rule>
      <rule>
        <id>BR-2</id>
        <description>All existing tests must pass after className updates</description>
        <rationale>Ensure no regressions; maintain code quality</rationale>
      </rule>
      <rule>
        <id>BR-3</id>
        <description>Mobile-first responsive design required</description>
        <rationale>Application must work on 375px mobile viewports</rationale>
      </rule>
    </businessRules>
  </constraints>

  <dependencies>
    <upstreamDependency>
      <storyId>1.2</storyId>
      <title>React Frontend Setup</title>
      <reason>Requires existing React components and Tailwind configuration</reason>
      <status>Complete</status>
    </upstreamDependency>
    <upstreamDependency>
      <storyId>2.3</storyId>
      <title>Display RAGAS Scores in Frontend</title>
      <reason>RagasScoreDisplay component must exist for styling</reason>
      <status>Complete</status>
    </upstreamDependency>
  </dependencies>

  <tests>
    <automated>
      <test id="AC1-Test">
        <type>Static Analysis</type>
        <command>grep -r "bg-gray\|text-gray" frontend/src/components</command>
        <expectedResult>0 results (no gray classes remaining)</expectedResult>
        <relatedAC>AC1</relatedAC>
      </test>
      <test id="AC2-Test-Build">
        <type>Build Verification</type>
        <command>cd frontend &amp;&amp; npm run build</command>
        <expectedResult>Exit code 0, no errors</expectedResult>
        <relatedAC>AC2</relatedAC>
      </test>
      <test id="AC3-Test">
        <type>Unit Tests</type>
        <command>cd frontend &amp;&amp; npm test</command>
        <expectedResult>100% pass rate, all 12+ tests passing</expectedResult>
        <relatedAC>AC3</relatedAC>
      </test>
    </automated>

    <manual>
      <test id="AC4-Test-Functional">
        <type>Functional Smoke Test</type>
        <steps>
          <step>Start dev server: npm run dev</step>
          <step>Submit query: "Show me employees in Engineering"</step>
          <step>Verify: Results table displays with dark zinc theme</step>
          <step>Verify: RAGAS scores render with dark card styling</step>
          <step>Submit invalid query</step>
          <step>Verify: Error message displays with dark zinc-900 background, red-400 text</step>
        </steps>
        <relatedAC>AC4</relatedAC>
      </test>
      <test id="AC4-Test-Responsive">
        <type>Responsive Design Test</type>
        <steps>
          <step>Open Chrome DevTools → Device Toolbar</step>
          <step>Set viewport to 375px (iPhone SE)</step>
          <step>Verify: No horizontal scroll</step>
          <step>Verify: Text readable (minimum 14px font size)</step>
          <step>Verify: Buttons tappable (minimum 44px height)</step>
          <step>Set viewport to 1920px (Desktop)</step>
          <step>Verify: Proper spacing, cards centered, max-width constraints applied</step>
        </steps>
        <relatedAC>AC4</relatedAC>
      </test>
      <test id="AC5-Test-Accessibility">
        <type>Accessibility Validation</type>
        <steps>
          <step>Open WebAIM Contrast Checker (https://webaim.org/resources/contrastchecker/)</step>
          <step>Test zinc-950 (#09090b) + white (#ffffff) → Verify ≥ 4.5:1</step>
          <step>Test zinc-900 (#18181b) + zinc-300 (#d4d4d8) → Verify ≥ 4.5:1</step>
          <step>Enable screen reader (NVDA/JAWS/VoiceOver)</step>
          <step>Navigate through app with keyboard only</step>
          <step>Verify: All interactive elements announced correctly</step>
        </steps>
        <relatedAC>AC5</relatedAC>
      </test>
    </manual>
  </tests>

  <technicalNotes>
    <note category="Color Mapping">
      <title>Tailwind Color Palette Migration</title>
      <content>
        Old (Light Theme) → New (Dark Theme):
        - bg-gray-50 → bg-zinc-950 (Main background)
        - bg-white → bg-zinc-900 (Card background)
        - text-gray-900 → text-white (Primary text)
        - text-gray-600 → text-zinc-400 (Secondary text)
        - text-gray-700 → text-zinc-300 (Table text)
        - border-gray-200 → border-zinc-700 (Borders)
      </content>
    </note>
    <note category="Accessibility">
      <title>WCAG AAA Compliance Achieved</title>
      <content>
        Verified contrast ratios (all exceed WCAG AAA 7:1 requirement):
        - zinc-950 (#09090b) + white (#ffffff) = 20.6:1 ✓
        - zinc-900 (#18181b) + zinc-300 (#d4d4d8) = 9.1:1 ✓
        - zinc-950 + zinc-400 (#a1a1aa) = 10.2:1 ✓
      </content>
    </note>
    <note category="Testing Strategy">
      <title>Test Suite Updates Required</title>
      <content>
        Multiple test files contain hardcoded className assertions (e.g., expect(row).toHaveClass('hover:bg-gray-50')).
        These will fail after dark theme applied. Task 7 addresses systematic update of all test assertions.
        Use grep -r "toHaveClass.*gray" frontend/src/__tests__/ to find all occurrences.
      </content>
    </note>
    <note category="Deployment">
      <title>Zero-Downtime Deployment Strategy</title>
      <content>
        Styling changes are purely presentational with no API contract changes.
        Railway deployment should complete without downtime.
        Rollback plan: git revert HEAD &amp;&amp; git push (reverses to light theme instantly)
        Documented commit hash before push for emergency rollback: git reset --hard &lt;hash&gt;
      </content>
    </note>
  </technicalNotes>

  <riskMitigation>
    <risk id="RISK-1">
      <description>Test suite breaks due to hardcoded className assertions</description>
      <likelihood>High</likelihood>
      <impact>Medium</impact>
      <mitigation>Task 7 systematically updates all test files; grep search ensures no missed occurrences</mitigation>
    </risk>
    <risk id="RISK-2">
      <description>Accessibility regression (contrast ratios fail WCAG)</description>
      <likelihood>Low</likelihood>
      <impact>High</impact>
      <mitigation>Task 0.1 validates contrast ratios before implementation; Tailwind zinc palette pre-verified as WCAG AAA compliant</mitigation>
    </risk>
    <risk id="RISK-3">
      <description>Production deployment causes visual regression</description>
      <likelihood>Low</likelihood>
      <impact>Medium</impact>
      <mitigation>Task 9 (local production build verification) catches issues before deployment; documented rollback plan in Dev Notes</mitigation>
    </risk>
    <risk id="RISK-4">
      <description>Mobile responsive breakpoint issues</description>
      <likelihood>Medium</likelihood>
      <impact>Medium</impact>
      <mitigation>Task 8.4 explicitly tests 375px viewport; Tailwind responsive utilities ensure graceful degradation</mitigation>
    </risk>
  </riskMitigation>
</storyContext>
